@model RideDetailsViewModel

@{
    var remainingSeats = Model.AvailableSeats + 1 - Model.Participants.Count;

    var isUserParticipant = User.Identity.IsAuthenticated && Model.Participants.Any(p => p.UserEmail == User.Identity.Name);
}

<div class="card text-center">
    @if (isUserParticipant)
    {
        <div class="card-body">
            <div class="btn btn-primary btn-block py-3 disabled">
                <i class="fas fa-check"></i> Participating
            </div>
        </div>
    }
    else if (User.Identity.IsAuthenticated && Model.JoinRequests.Any(r => r.UserEmail == User.Identity.Name))
    {
        <div class="card-body">
            <div class="btn btn-info btn-block py-3 disabled">
                <i class="fas fa-vote-yea"></i> Request sent
            </div>
        </div>
    }
    else if (remainingSeats == 0)
    {
        <div class="card-body">
            <div class="btn btn-secondary btn-block py-3 disabled">All seats are taken</div>
        </div>
    }
    else if (User.Identity.IsAuthenticated)
    {
        <div class="card-body">
            <a class="btn btn-primary btn-block py-3" 
               asp-controller="JoinRequests" asp-action="Create" asp-route-id="@Model.Id">
                <i class="fas fa-hand-point-right"></i> Join ride
            </a>
        </div>
    }
    else
    {
        <div class="card-header">Login now to join this ride</div>
        <div class="card-body">
            <a class="btn btn-primary btn-block py-3" asp-controller="Authentication" asp-action="Login"
               asp-route-returnUrl="@Url.Action("Details", "Rides", new {id = Model.Id})">
                <i class="fas fa-hand-point-right"></i> Login now
            </a>
        </div>
    }
    <div class="card-footer">
        <i class="fas fa-user-friends"></i> @remainingSeats remaining free
        @(remainingSeats == 1 ? "seat" : "seats")
    </div>
</div>